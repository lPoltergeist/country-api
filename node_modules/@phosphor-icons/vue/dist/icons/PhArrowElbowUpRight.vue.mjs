import { defineComponent as V, inject as l, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as s } from "vue";
const A = ["width", "height", "fill", "transform"], H = { key: 0 }, M = /* @__PURE__ */ s("path", { d: "M216.49,88.49l-48,48a12,12,0,0,1-17-17L179,92H76V224a12,12,0,0,1-24,0V80A12,12,0,0,1,64,68H179L151.51,40.49a12,12,0,1,1,17-17l48,48A12,12,0,0,1,216.49,88.49Z" }, null, -1), L = [
  M
], k = { key: 1 }, Z = /* @__PURE__ */ s("path", {
  d: "M208,80l-48,48V32Z",
  opacity: "0.2"
}, null, -1), v = /* @__PURE__ */ s("path", { d: "M213.66,74.34l-48-48A8,8,0,0,0,152,32V72H64a8,8,0,0,0-8,8V224a8,8,0,0,0,16,0V88h80v40a8,8,0,0,0,13.66,5.66l48-48A8,8,0,0,0,213.66,74.34ZM168,108.69V51.31L196.69,80Z" }, null, -1), x = [
  Z,
  v
], S = { key: 2 }, z = /* @__PURE__ */ s("path", { d: "M213.66,85.66l-48,48A8,8,0,0,1,152,128V88H72V224a8,8,0,0,1-16,0V80a8,8,0,0,1,8-8h88V32a8,8,0,0,1,13.66-5.66l48,48A8,8,0,0,1,213.66,85.66Z" }, null, -1), C = [
  z
], B = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M212.24,84.24l-48,48a6,6,0,0,1-8.48-8.48L193.51,86H70V224a6,6,0,0,1-12,0V80a6,6,0,0,1,6-6H193.51L155.76,36.24a6,6,0,0,1,8.48-8.48l48,48A6,6,0,0,1,212.24,84.24Z" }, null, -1), E = [
  b
], N = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M213.66,85.66l-48,48a8,8,0,0,1-11.32-11.32L188.69,88H72V224a8,8,0,0,1-16,0V80a8,8,0,0,1,8-8H188.69L154.34,37.66a8,8,0,0,1,11.32-11.32l48,48A8,8,0,0,1,213.66,85.66Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M210.83,82.83l-48,48a4,4,0,0,1-5.66-5.66L198.34,84H68V224a4,4,0,0,1-8,0V80a4,4,0,0,1,4-4H198.34L157.17,34.83a4,4,0,0,1,5.66-5.66l48,48A4,4,0,0,1,210.83,82.83Z" }, null, -1), R = [
  j
], U = {
  name: "PhArrowElbowUpRight"
}, F = /* @__PURE__ */ V({
  ...U,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const i = c, h = l("weight", "regular"), _ = l("size", "1em"), p = l("color", "currentColor"), g = l("mirrored", !1), n = r(() => i.weight ?? h), a = r(() => i.size ?? _), u = r(() => i.color ?? p), m = r(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", H, L)) : t(n) === "duotone" ? (o(), e("g", k, x)) : t(n) === "fill" ? (o(), e("g", S, C)) : t(n) === "light" ? (o(), e("g", B, E)) : t(n) === "regular" ? (o(), e("g", N, W)) : t(n) === "thin" ? (o(), e("g", $, R)) : w("", !0)
    ], 16, A));
  }
});
export {
  F as default
};
