import { defineComponent as H, inject as r, computed as a, openBlock as o, createElementBlock as e, mergeProps as V, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as s } from "vue";
const w = ["width", "height", "fill", "transform"], A = { key: 0 }, Z = /* @__PURE__ */ s("path", { d: "M208,28H48A20,20,0,0,0,28,48V208a20,20,0,0,0,20,20H208a20,20,0,0,0,20-20V48A20,20,0,0,0,208,28Zm-4,176H52V52H204Z" }, null, -1), k = [
  Z
], x = { key: 1 }, M = /* @__PURE__ */ s("path", {
  d: "M216,48V208a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208A8,8,0,0,1,216,48Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ s("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32Zm0,176H48V48H208V208Z" }, null, -1), v = [
  M,
  S
], z = { key: 2 }, C = /* @__PURE__ */ s("rect", {
  x: "32",
  y: "32",
  width: "192",
  height: "192",
  rx: "16"
}, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M208,34H48A14,14,0,0,0,34,48V208a14,14,0,0,0,14,14H208a14,14,0,0,0,14-14V48A14,14,0,0,0,208,34Zm2,174a2,2,0,0,1-2,2H48a2,2,0,0,1-2-2V48a2,2,0,0,1,2-2H208a2,2,0,0,1,2,2Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32Zm0,176H48V48H208V208Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M208,36H48A12,12,0,0,0,36,48V208a12,12,0,0,0,12,12H208a12,12,0,0,0,12-12V48A12,12,0,0,0,208,36Zm4,172a4,4,0,0,1-4,4H48a4,4,0,0,1-4-4V48a4,4,0,0,1,4-4H208a4,4,0,0,1,4,4Z" }, null, -1), D = [
  q
], F = {
  name: "PhSquare"
}, J = /* @__PURE__ */ H({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = r("weight", "regular"), h = r("size", "1em"), p = r("color", "currentColor"), m = r("mirrored", !1), n = a(() => i.weight ?? _), c = a(() => i.size ?? h), g = a(() => i.color ?? p), u = a(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : m ? "scale(-1, 1)" : void 0);
    return (d, G) => (o(), e("svg", V({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(c),
      height: t(c),
      fill: t(g),
      transform: t(u)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", A, k)) : t(n) === "duotone" ? (o(), e("g", x, v)) : t(n) === "fill" ? (o(), e("g", z, B)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, $)) : t(n) === "thin" ? (o(), e("g", j, D)) : f("", !0)
    ], 16, w));
  }
});
export {
  J as default
};
