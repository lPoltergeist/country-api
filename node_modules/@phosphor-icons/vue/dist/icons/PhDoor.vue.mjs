import { defineComponent as u, inject as a, computed as r, openBlock as o, createElementBlock as e, mergeProps as V, unref as t, renderSlot as Z, createCommentVNode as y, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], f = { key: 0 }, A = /* @__PURE__ */ s("path", { d: "M232,212H212V40a20,20,0,0,0-20-20H64A20,20,0,0,0,44,40V212H24a12,12,0,0,0,0,24H232a12,12,0,0,0,0-24ZM68,44H188V212H68Zm104,88a16,16,0,1,1-16-16A16,16,0,0,1,172,132Z" }, null, -1), w = [
  A
], k = { key: 1 }, v = /* @__PURE__ */ s("path", {
  d: "M200,40V224H56V40a8,8,0,0,1,8-8H192A8,8,0,0,1,200,40Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M232,216H208V40a16,16,0,0,0-16-16H64A16,16,0,0,0,48,40V216H24a8,8,0,0,0,0,16H232a8,8,0,0,0,0-16ZM64,40H192V216H64Zm104,92a12,12,0,1,1-12-12A12,12,0,0,1,168,132Z" }, null, -1), S = [
  v,
  x
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M232,216H208V40a16,16,0,0,0-16-16H64A16,16,0,0,0,48,40V216H24a8,8,0,0,0,0,16H232a8,8,0,0,0,0-16Zm-68-72a12,12,0,1,1,12-12A12,12,0,0,1,164,144Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M232,218H206V40a14,14,0,0,0-14-14H64A14,14,0,0,0,50,40V218H24a6,6,0,0,0,0,12H232a6,6,0,0,0,0-12ZM62,40a2,2,0,0,1,2-2H192a2,2,0,0,1,2,2V218H62Zm104,92a10,10,0,1,1-10-10A10,10,0,0,1,166,132Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M232,216H208V40a16,16,0,0,0-16-16H64A16,16,0,0,0,48,40V216H24a8,8,0,0,0,0,16H232a8,8,0,0,0,0-16ZM64,40H192V216H64Zm104,92a12,12,0,1,1-12-12A12,12,0,0,1,168,132Z" }, null, -1), $ = [
  W
], j = { key: 5 }, D = /* @__PURE__ */ s("path", { d: "M232,220H204V40a12,12,0,0,0-12-12H64A12,12,0,0,0,52,40V220H24a4,4,0,0,0,0,8H232a4,4,0,0,0,0-8ZM60,40a4,4,0,0,1,4-4H192a4,4,0,0,1,4,4V220H60Zm104,92a8,8,0,1,1-8-8A8,8,0,0,1,164,132Z" }, null, -1), q = [
  D
], F = {
  name: "PhDoor"
}, J = /* @__PURE__ */ u({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = a("weight", "regular"), h = a("size", "1em"), H = a("color", "currentColor"), p = a("mirrored", !1), n = r(() => i.weight ?? _), d = r(() => i.size ?? h), m = r(() => i.color ?? H), g = r(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (c, G) => (o(), e("svg", V({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(m),
      transform: t(g)
    }, c.$attrs), [
      Z(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", f, w)) : t(n) === "duotone" ? (o(), e("g", k, S)) : t(n) === "fill" ? (o(), e("g", z, B)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, $)) : t(n) === "thin" ? (o(), e("g", j, q)) : y("", !0)
    ], 16, M));
  }
});
export {
  J as default
};
