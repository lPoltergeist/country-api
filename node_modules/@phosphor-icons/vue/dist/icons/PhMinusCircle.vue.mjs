import { defineComponent as Z, inject as r, computed as c, openBlock as o, createElementBlock as e, mergeProps as A, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as s } from "vue";
const w = ["width", "height", "fill", "transform"], M = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M180,128a12,12,0,0,1-12,12H88a12,12,0,0,1,0-24h80A12,12,0,0,1,180,128Zm56,0A108,108,0,1,1,128,20,108.12,108.12,0,0,1,236,128Zm-24,0a84,84,0,1,0-84,84A84.09,84.09,0,0,0,212,128Z" }, null, -1), v = [
  k
], x = { key: 1 }, C = /* @__PURE__ */ s("path", {
  d: "M224,128a96,96,0,1,1-96-96A96,96,0,0,1,224,128Z",
  opacity: "0.2"
}, null, -1), H = /* @__PURE__ */ s("path", { d: "M176,128a8,8,0,0,1-8,8H88a8,8,0,0,1,0-16h80A8,8,0,0,1,176,128Zm56,0A104,104,0,1,1,128,24,104.11,104.11,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Z" }, null, -1), S = [
  C,
  H
], z = { key: 2 }, B = /* @__PURE__ */ s("path", { d: "M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm40,112H88a8,8,0,0,1,0-16h80a8,8,0,0,1,0,16Z" }, null, -1), N = [
  B
], b = { key: 3 }, E = /* @__PURE__ */ s("path", { d: "M174,128a6,6,0,0,1-6,6H88a6,6,0,0,1,0-12h80A6,6,0,0,1,174,128Zm56,0A102,102,0,1,1,128,26,102.12,102.12,0,0,1,230,128Zm-12,0a90,90,0,1,0-90,90A90.1,90.1,0,0,0,218,128Z" }, null, -1), P = [
  E
], V = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M176,128a8,8,0,0,1-8,8H88a8,8,0,0,1,0-16h80A8,8,0,0,1,176,128Zm56,0A104,104,0,1,1,128,24,104.11,104.11,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M172,128a4,4,0,0,1-4,4H88a4,4,0,0,1,0-8h80A4,4,0,0,1,172,128Zm56,0A100,100,0,1,1,128,28,100.11,100.11,0,0,1,228,128Zm-8,0a92,92,0,1,0-92,92A92.1,92.1,0,0,0,220,128Z" }, null, -1), D = [
  q
], F = {
  name: "PhMinusCircle"
}, J = /* @__PURE__ */ Z({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const i = h, l = r("weight", "regular"), _ = r("size", "1em"), m = r("color", "currentColor"), p = r("mirrored", !1), n = c(() => i.weight ?? l), d = c(() => i.size ?? _), g = c(() => i.color ?? m), u = c(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (a, G) => (o(), e("svg", A({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(u)
    }, a.$attrs), [
      y(a.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", M, v)) : t(n) === "duotone" ? (o(), e("g", x, S)) : t(n) === "fill" ? (o(), e("g", z, N)) : t(n) === "light" ? (o(), e("g", b, P)) : t(n) === "regular" ? (o(), e("g", V, $)) : t(n) === "thin" ? (o(), e("g", j, D)) : f("", !0)
    ], 16, w));
  }
});
export {
  J as default
};
