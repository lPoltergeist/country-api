import { defineComponent as y, inject as r, computed as d, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as M, createElementVNode as s } from "vue";
const k = ["width", "height", "fill", "transform"], A = { key: 0 }, Z = /* @__PURE__ */ s("path", { d: "M144,128a16,16,0,1,1-16-16A16,16,0,0,1,144,128Z" }, null, -1), v = [
  Z
], x = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M176,128a48,48,0,1,1-48-48A48,48,0,0,1,176,128Z",
  opacity: "0.2"
}, null, -1), z = /* @__PURE__ */ s("path", { d: "M140,128a12,12,0,1,1-12-12A12,12,0,0,1,140,128Z" }, null, -1), C = [
  S,
  z
], B = { key: 2 }, N = /* @__PURE__ */ s("path", { d: "M128,80a48,48,0,1,0,48,48A48,48,0,0,0,128,80Zm0,60a12,12,0,1,1,12-12A12,12,0,0,1,128,140Z" }, null, -1), b = [
  N
], E = { key: 3 }, P = /* @__PURE__ */ s("path", { d: "M138,128a10,10,0,1,1-10-10A10,10,0,0,1,138,128Z" }, null, -1), V = [
  P
], W = { key: 4 }, $ = /* @__PURE__ */ s("path", { d: "M140,128a12,12,0,1,1-12-12A12,12,0,0,1,140,128Z" }, null, -1), j = [
  $
], D = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M136,128a8,8,0,1,1-8-8A8,8,0,0,1,136,128Z" }, null, -1), F = [
  q
], G = {
  name: "PhDot"
}, J = /* @__PURE__ */ y({
  ...G,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(_) {
    const i = _, h = r("weight", "regular"), a = r("size", "1em"), p = r("color", "currentColor"), g = r("mirrored", !1), n = d(() => i.weight ?? h), c = d(() => i.size ?? a), m = d(() => i.color ?? p), u = d(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (l, H) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(c),
      height: t(c),
      fill: t(m),
      transform: t(u)
    }, l.$attrs), [
      w(l.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", A, v)) : t(n) === "duotone" ? (o(), e("g", x, C)) : t(n) === "fill" ? (o(), e("g", B, b)) : t(n) === "light" ? (o(), e("g", E, V)) : t(n) === "regular" ? (o(), e("g", W, j)) : t(n) === "thin" ? (o(), e("g", D, F)) : M("", !0)
    ], 16, k));
  }
});
export {
  J as default
};
