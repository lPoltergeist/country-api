import { defineComponent as H, inject as l, computed as a, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], A = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M167.51,127.51,195,100H88a44,44,0,0,0,0,88h88a12,12,0,0,1,0,24H88A68,68,0,0,1,88,76H195L167.51,48.49a12,12,0,1,1,17-17l48,48a12,12,0,0,1,0,17l-48,48a12,12,0,0,1-17-17Z" }, null, -1), Z = [
  k
], v = { key: 1 }, x = /* @__PURE__ */ s("path", {
  d: "M224,88l-48,48V40Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ s("path", { d: "M172.94,143.39a8,8,0,0,0,8.72-1.73l48-48a8,8,0,0,0,0-11.32l-48-48A8,8,0,0,0,168,40V80H88a64,64,0,0,0,0,128h88a8,8,0,0,0,0-16H88a48,48,0,0,1,0-96h80v40A8,8,0,0,0,172.94,143.39ZM184,59.31,212.69,88,184,116.69Z" }, null, -1), V = [
  x,
  S
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M168,136V96H88a48,48,0,0,0,0,96h88a8,8,0,0,1,0,16H88A64,64,0,0,1,88,80h80V40a8,8,0,0,1,13.66-5.66l48,48a8,8,0,0,1,0,11.32l-48,48A8,8,0,0,1,168,136Z" }, null, -1), B = [
  C
], L = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M171.76,131.76,209.51,94H88a50,50,0,0,0,0,100h88a6,6,0,0,1,0,12H88A62,62,0,0,1,88,82H209.51L171.76,44.24a6,6,0,0,1,8.48-8.48l48,48a6,6,0,0,1,0,8.48l-48,48a6,6,0,0,1-8.48-8.48Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M170.34,130.34,204.69,96H88a48,48,0,0,0,0,96h88a8,8,0,0,1,0,16H88A64,64,0,0,1,88,80H204.69L170.34,45.66a8,8,0,0,1,11.32-11.32l48,48a8,8,0,0,1,0,11.32l-48,48a8,8,0,0,1-11.32-11.32Z" }, null, -1), U = [
  P
], W = { key: 5 }, $ = /* @__PURE__ */ s("path", { d: "M173.17,133.17,214.34,92H88a52,52,0,0,0,0,104h88a4,4,0,0,1,0,8H88A60,60,0,0,1,88,84H214.34L173.17,42.83a4,4,0,0,1,5.66-5.66l48,48a4,4,0,0,1,0,5.66l-48,48a4,4,0,0,1-5.66-5.66Z" }, null, -1), j = [
  $
], R = {
  name: "PhArrowUUpRight"
}, F = /* @__PURE__ */ H({
  ...R,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const i = h, c = l("weight", "regular"), _ = l("size", "1em"), p = l("color", "currentColor"), g = l("mirrored", !1), n = a(() => i.weight ?? c), r = a(() => i.size ?? _), u = a(() => i.color ?? p), m = a(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", A, Z)) : t(n) === "duotone" ? (o(), e("g", v, V)) : t(n) === "fill" ? (o(), e("g", z, B)) : t(n) === "light" ? (o(), e("g", L, b)) : t(n) === "regular" ? (o(), e("g", E, U)) : t(n) === "thin" ? (o(), e("g", W, j)) : w("", !0)
    ], 16, M));
  }
});
export {
  F as default
};
