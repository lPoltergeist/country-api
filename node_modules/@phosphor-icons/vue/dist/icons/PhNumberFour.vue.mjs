import { defineComponent as H, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as v, unref as t, renderSlot as V, createCommentVNode as y, createElementVNode as s } from "vue";
const f = ["width", "height", "fill", "transform"], A = { key: 0 }, w = /* @__PURE__ */ s("path", { d: "M188,152a12,12,0,0,1-12,12H164v44a12,12,0,0,1-24,0V164H72a12,12,0,0,1-11.3-16l40-112A12,12,0,1,1,123.3,44L89,140h51V96a12,12,0,0,1,24,0v44h12A12,12,0,0,1,188,152Z" }, null, -1), M = [
  w
], k = { key: 1 }, Z = /* @__PURE__ */ s("path", {
  d: "M216,40V216a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V40A16,16,0,0,1,56,24H200A16,16,0,0,1,216,40Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M184,152a8,8,0,0,1-8,8H160v48a8,8,0,0,1-16,0V160H72a8,8,0,0,1-7.53-10.69l40-112a8,8,0,0,1,15.06,5.38L83.35,144H144V96a8,8,0,0,1,16,0v48h16A8,8,0,0,1,184,152Z" }, null, -1), L = [
  Z,
  x
], S = { key: 2 }, z = /* @__PURE__ */ s("path", { d: "M200,24H56A16,16,0,0,0,40,40V216a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM168,152h-8v32a8,8,0,0,1-16,0V152H88a8,8,0,0,1-7.43-11l32-80A8,8,0,0,1,127.43,67L99.82,136H144V104a8,8,0,0,1,16,0v32h8a8,8,0,0,1,0,16Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M182,152a6,6,0,0,1-6,6H158v50a6,6,0,0,1-12,0V158H72a6,6,0,0,1-5.65-8l40-112a6,6,0,0,1,11.3,4L80.51,146H146V96a6,6,0,0,1,12,0v50h18A6,6,0,0,1,182,152Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M184,152a8,8,0,0,1-8,8H160v48a8,8,0,0,1-16,0V160H72a8,8,0,0,1-7.53-10.69l40-112a8,8,0,0,1,15.06,5.38L83.35,144H144V96a8,8,0,0,1,16,0v48h16A8,8,0,0,1,184,152Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M180,152a4,4,0,0,1-4,4H156v52a4,4,0,0,1-8,0V156H72a4,4,0,0,1-3.77-5.35l40-112a4,4,0,1,1,7.54,2.69L77.68,148H148V96a4,4,0,0,1,8,0v52h20A4,4,0,0,1,180,152Z" }, null, -1), F = [
  j
], q = {
  name: "PhNumberFour"
}, I = /* @__PURE__ */ H({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const a = c, h = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), n = r(() => a.weight ?? h), l = r(() => a.size ?? _), u = r(() => a.color ?? p), m = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, D) => (o(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(l),
      height: t(l),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      V(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", A, M)) : t(n) === "duotone" ? (o(), e("g", k, L)) : t(n) === "fill" ? (o(), e("g", S, C)) : t(n) === "light" ? (o(), e("g", B, b)) : t(n) === "regular" ? (o(), e("g", E, W)) : t(n) === "thin" ? (o(), e("g", $, F)) : y("", !0)
    ], 16, f));
  }
});
export {
  I as default
};
