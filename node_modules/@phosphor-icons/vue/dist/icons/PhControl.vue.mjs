import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as M, createElementVNode as s } from "vue";
const k = ["width", "height", "fill", "transform"], Z = { key: 0 }, A = /* @__PURE__ */ s("path", { d: "M208.49,128.49a12,12,0,0,1-17,0L128,65,64.49,128.49a12,12,0,0,1-17-17l72-72a12,12,0,0,1,17,0l72,72A12,12,0,0,1,208.49,128.49Z" }, null, -1), v = [
  A
], x = { key: 1 }, C = /* @__PURE__ */ s("path", {
  d: "M200,120H56l72-72Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ s("path", { d: "M205.66,114.34l-72-72a8,8,0,0,0-11.32,0l-72,72A8,8,0,0,0,56,128H200a8,8,0,0,0,5.66-13.66ZM75.31,112,128,59.31,180.69,112Z" }, null, -1), z = [
  C,
  S
], B = { key: 2 }, L = /* @__PURE__ */ s("path", { d: "M207.39,123.06A8,8,0,0,1,200,128H56a8,8,0,0,1-5.66-13.66l72-72a8,8,0,0,1,11.32,0l72,72A8,8,0,0,1,207.39,123.06Z" }, null, -1), H = [
  L
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M204.24,124.24a6,6,0,0,1-8.48,0L128,56.49,60.24,124.24a6,6,0,0,1-8.48-8.48l72-72a6,6,0,0,1,8.48,0l72,72A6,6,0,0,1,204.24,124.24Z" }, null, -1), E = [
  b
], P = { key: 4 }, V = /* @__PURE__ */ s("path", { d: "M205.66,125.66a8,8,0,0,1-11.32,0L128,59.31,61.66,125.66a8,8,0,0,1-11.32-11.32l72-72a8,8,0,0,1,11.32,0l72,72A8,8,0,0,1,205.66,125.66Z" }, null, -1), W = [
  V
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M202.83,122.83a4,4,0,0,1-5.66,0L128,53.66,58.83,122.83a4,4,0,0,1-5.66-5.66l72-72a4,4,0,0,1,5.66,0l72,72A4,4,0,0,1,202.83,122.83Z" }, null, -1), q = [
  j
], D = {
  name: "PhControl"
}, I = /* @__PURE__ */ y({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(a) {
    const l = a, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), n = r(() => l.weight ?? _), d = r(() => l.size ?? h), u = r(() => l.color ?? p), m = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (c, F) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(u),
      transform: t(m)
    }, c.$attrs), [
      w(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", Z, v)) : t(n) === "duotone" ? (o(), e("g", x, z)) : t(n) === "fill" ? (o(), e("g", B, H)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, W)) : t(n) === "thin" ? (o(), e("g", $, q)) : M("", !0)
    ], 16, k));
  }
});
export {
  I as default
};
