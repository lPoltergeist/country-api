import { defineComponent as u, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as m, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as s } from "vue";
const w = ["width", "height", "fill", "transform"], M = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M212,56V88a12,12,0,0,1-24,0V68H140V188h20a12,12,0,0,1,0,24H96a12,12,0,0,1,0-24h20V68H68V88a12,12,0,0,1-24,0V56A12,12,0,0,1,56,44H200A12,12,0,0,1,212,56Z" }, null, -1), v = [
  k
], A = { key: 1 }, Z = /* @__PURE__ */ s("path", {
  d: "M200,56V192a8,8,0,0,1-8,8H64a8,8,0,0,1-8-8V56Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M208,56V88a8,8,0,0,1-16,0V64H136V192h24a8,8,0,0,1,0,16H96a8,8,0,0,1,0-16h24V64H64V88a8,8,0,0,1-16,0V56a8,8,0,0,1,8-8H200A8,8,0,0,1,208,56Z" }, null, -1), S = [
  Z,
  x
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM184,96a8,8,0,0,1-16,0V88H136v88h16a8,8,0,0,1,0,16H104a8,8,0,0,1,0-16h16V88H88v8a8,8,0,0,1-16,0V80a8,8,0,0,1,8-8h96a8,8,0,0,1,8,8Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M206,56V88a6,6,0,0,1-12,0V62H134V194h26a6,6,0,0,1,0,12H96a6,6,0,0,1,0-12h26V62H62V88a6,6,0,0,1-12,0V56a6,6,0,0,1,6-6H200A6,6,0,0,1,206,56Z" }, null, -1), E = [
  b
], P = { key: 4 }, T = /* @__PURE__ */ s("path", { d: "M208,56V88a8,8,0,0,1-16,0V64H136V192h24a8,8,0,0,1,0,16H96a8,8,0,0,1,0-16h24V64H64V88a8,8,0,0,1-16,0V56a8,8,0,0,1,8-8H200A8,8,0,0,1,208,56Z" }, null, -1), W = [
  T
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M204,56V88a4,4,0,0,1-8,0V60H132V196h28a4,4,0,0,1,0,8H96a4,4,0,0,1,0-8h28V60H60V88a4,4,0,0,1-8,0V56a4,4,0,0,1,4-4H200A4,4,0,0,1,204,56Z" }, null, -1), q = [
  j
], D = {
  name: "PhTextT"
}, I = /* @__PURE__ */ u({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const a = c, l = i("weight", "regular"), _ = i("size", "1em"), V = i("color", "currentColor"), p = i("mirrored", !1), n = r(() => a.weight ?? l), h = r(() => a.size ?? _), H = r(() => a.color ?? V), g = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", m({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(h),
      height: t(h),
      fill: t(H),
      transform: t(g)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", M, v)) : t(n) === "duotone" ? (o(), e("g", A, S)) : t(n) === "fill" ? (o(), e("g", z, B)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, W)) : t(n) === "thin" ? (o(), e("g", $, q)) : f("", !0)
    ], 16, w));
  }
});
export {
  I as default
};
