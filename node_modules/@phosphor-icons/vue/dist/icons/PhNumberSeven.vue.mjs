import { defineComponent as y, inject as r, computed as l, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as H, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], k = { key: 0 }, Z = /* @__PURE__ */ s("path", { d: "M179.49,51.45l-48,160A12,12,0,0,1,120,220a11.82,11.82,0,0,1-3.45-.51,12,12,0,0,1-8-14.94L151.87,60H88a12,12,0,0,1,0-24h80a12,12,0,0,1,11.49,15.45Z" }, null, -1), v = [
  Z
], S = { key: 1 }, x = /* @__PURE__ */ s("path", {
  d: "M216,40V216a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V40A16,16,0,0,1,56,24H200A16,16,0,0,1,216,40Z",
  opacity: "0.2"
}, null, -1), A = /* @__PURE__ */ s("path", { d: "M175.66,50.3l-48,160a8,8,0,0,1-15.32-4.6L157.25,56H88a8,8,0,0,1,0-16h80a8,8,0,0,1,7.66,10.3Z" }, null, -1), L = [
  x,
  A
], V = { key: 2 }, z = /* @__PURE__ */ s("path", { d: "M200,24H56A16,16,0,0,0,40,40V216a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM167.53,74.69l-40,112a8,8,0,1,1-15.06-5.38L148.65,80H96a8,8,0,0,1,0-16h64a8,8,0,0,1,7.53,10.69Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M173.75,49.72l-48,160a6,6,0,1,1-11.5-3.45L159.94,54H88a6,6,0,0,1,0-12h80a6,6,0,0,1,5.75,7.72Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M175.66,50.3l-48,160a8,8,0,0,1-15.32-4.6L157.25,56H88a8,8,0,0,1,0-16h80a8,8,0,0,1,7.66,10.3Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M171.83,49.15l-48,160A4,4,0,0,1,120,212a3.82,3.82,0,0,1-1.15-.17,4,4,0,0,1-2.68-5L162.62,52H88a4,4,0,0,1,0-8h80a4,4,0,0,1,3.83,5.15Z" }, null, -1), q = [
  j
], D = {
  name: "PhNumberSeven"
}, I = /* @__PURE__ */ y({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const i = c, h = r("weight", "regular"), _ = r("size", "1em"), p = r("color", "currentColor"), g = r("mirrored", !1), n = l(() => i.weight ?? h), a = l(() => i.size ?? _), u = l(() => i.color ?? p), m = l(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      w(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", k, v)) : t(n) === "duotone" ? (o(), e("g", S, L)) : t(n) === "fill" ? (o(), e("g", V, C)) : t(n) === "light" ? (o(), e("g", B, b)) : t(n) === "regular" ? (o(), e("g", E, W)) : t(n) === "thin" ? (o(), e("g", $, q)) : H("", !0)
    ], 16, M));
  }
});
export {
  I as default
};
