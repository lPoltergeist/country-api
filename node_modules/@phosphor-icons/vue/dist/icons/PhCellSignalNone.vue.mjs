import { defineComponent as v, inject as r, computed as l, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as n } from "vue";
const M = ["width", "height", "fill", "transform"], k = { key: 0 }, Z = /* @__PURE__ */ n("path", { d: "M52,192v8a12,12,0,0,1-24,0v-8a12,12,0,0,1,24,0Z" }, null, -1), S = [
  Z
], x = { key: 1 }, C = /* @__PURE__ */ n("path", { d: "M198.12,25.23a16,16,0,0,0-17.43,3.47l-160,160A16,16,0,0,0,32,216H192a16,16,0,0,0,16-16V40A16,16,0,0,0,198.12,25.23ZM192,200H32L192,40Z" }, null, -1), z = [
  C
], A = { key: 2 }, B = /* @__PURE__ */ n("path", { d: "M198.12,25.23a16,16,0,0,0-17.44,3.46l-160,160A16,16,0,0,0,32,216H192a16,16,0,0,0,16-16V40A15.94,15.94,0,0,0,198.12,25.23ZM192,200H32L192,40Z" }, null, -1), H = [
  B
], N = { key: 3 }, V = /* @__PURE__ */ n("path", { d: "M46,192v8a6,6,0,0,1-12,0v-8a6,6,0,0,1,12,0Z" }, null, -1), b = [
  V
], E = { key: 4 }, L = /* @__PURE__ */ n("path", { d: "M48,192v8a8,8,0,0,1-16,0v-8a8,8,0,0,1,16,0Z" }, null, -1), P = [
  L
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M44,192v8a4,4,0,0,1-8,0v-8a4,4,0,0,1,8,0Z" }, null, -1), j = [
  $
], q = {
  name: "PhCellSignalNone"
}, G = /* @__PURE__ */ v({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(_) {
    const i = _, a = r("weight", "regular"), h = r("size", "1em"), p = r("color", "currentColor"), g = r("mirrored", !1), s = l(() => i.weight ?? a), d = l(() => i.size ?? h), m = l(() => i.color ?? p), u = l(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (c, D) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(m),
      transform: t(u)
    }, c.$attrs), [
      f(c.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, S)) : t(s) === "duotone" ? (o(), e("g", x, z)) : t(s) === "fill" ? (o(), e("g", A, H)) : t(s) === "light" ? (o(), e("g", N, b)) : t(s) === "regular" ? (o(), e("g", E, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : w("", !0)
    ], 16, M));
  }
});
export {
  G as default
};
