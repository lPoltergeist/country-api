import { defineComponent as u, inject as h, computed as i, openBlock as o, createElementBlock as e, mergeProps as v, unref as t, renderSlot as m, createCommentVNode as y, createElementVNode as a } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, M = /* @__PURE__ */ a("path", { d: "M252,56a12,12,0,0,1-12,12H196v36a12,12,0,0,1-12,12H140v36a12,12,0,0,1-12,12H84v36a12,12,0,0,1-12,12H16a12,12,0,0,1,0-24H60V152a12,12,0,0,1,12-12h44V104a12,12,0,0,1,12-12h44V56a12,12,0,0,1,12-12h56A12,12,0,0,1,252,56Z" }, null, -1), k = [
  M
], S = { key: 1 }, Z = /* @__PURE__ */ a("path", {
  d: "M240,56V192a8,8,0,0,1-8,8H72V152h56V104h56V56Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ a("path", { d: "M248,56a8,8,0,0,1-8,8H192v40a8,8,0,0,1-8,8H136v40a8,8,0,0,1-8,8H80v40a8,8,0,0,1-8,8H16a8,8,0,0,1,0-16H64V152a8,8,0,0,1,8-8h48V104a8,8,0,0,1,8-8h48V56a8,8,0,0,1,8-8h56A8,8,0,0,1,248,56Z" }, null, -1), A = [
  Z,
  x
], z = { key: 2 }, C = /* @__PURE__ */ a("path", { d: "M240,56V200a8,8,0,0,1-8,8H8a8,8,0,0,1,0-16H56V152a8,8,0,0,1,8-8h48V104a8,8,0,0,1,8-8h48V56a8,8,0,0,1,8-8h56A8,8,0,0,1,240,56Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ a("path", { d: "M246,56a6,6,0,0,1-6,6H190v42a6,6,0,0,1-6,6H134v42a6,6,0,0,1-6,6H78v42a6,6,0,0,1-6,6H16a6,6,0,0,1,0-12H66V152a6,6,0,0,1,6-6h50V104a6,6,0,0,1,6-6h50V56a6,6,0,0,1,6-6h56A6,6,0,0,1,246,56Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ a("path", { d: "M248,56a8,8,0,0,1-8,8H192v40a8,8,0,0,1-8,8H136v40a8,8,0,0,1-8,8H80v40a8,8,0,0,1-8,8H16a8,8,0,0,1,0-16H64V152a8,8,0,0,1,8-8h48V104a8,8,0,0,1,8-8h48V56a8,8,0,0,1,8-8h56A8,8,0,0,1,248,56Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ a("path", { d: "M244,56a4,4,0,0,1-4,4H188v44a4,4,0,0,1-4,4H132v44a4,4,0,0,1-4,4H76v44a4,4,0,0,1-4,4H16a4,4,0,0,1,0-8H68V152a4,4,0,0,1,4-4h52V104a4,4,0,0,1,4-4h52V56a4,4,0,0,1,4-4h56A4,4,0,0,1,244,56Z" }, null, -1), D = [
  q
], F = {
  name: "PhSteps"
}, J = /* @__PURE__ */ u({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const n = c, l = h("weight", "regular"), _ = h("size", "1em"), p = h("color", "currentColor"), H = h("mirrored", !1), s = i(() => n.weight ?? l), r = i(() => n.size ?? _), V = i(() => n.color ?? p), g = i(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : H ? "scale(-1, 1)" : void 0);
    return (d, G) => (o(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(V),
      transform: t(g)
    }, d.$attrs), [
      m(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", w, k)) : t(s) === "duotone" ? (o(), e("g", S, A)) : t(s) === "fill" ? (o(), e("g", z, B)) : t(s) === "light" ? (o(), e("g", N, E)) : t(s) === "regular" ? (o(), e("g", P, $)) : t(s) === "thin" ? (o(), e("g", j, D)) : y("", !0)
    ], 16, f));
  }
});
export {
  J as default
};
