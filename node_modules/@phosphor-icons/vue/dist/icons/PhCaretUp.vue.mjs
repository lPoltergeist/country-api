import { defineComponent as y, inject as l, computed as r, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as M, createElementVNode as s } from "vue";
const k = ["width", "height", "fill", "transform"], Z = { key: 0 }, A = /* @__PURE__ */ s("path", { d: "M216.49,168.49a12,12,0,0,1-17,0L128,97,56.49,168.49a12,12,0,0,1-17-17l80-80a12,12,0,0,1,17,0l80,80A12,12,0,0,1,216.49,168.49Z" }, null, -1), v = [
  A
], x = { key: 1 }, C = /* @__PURE__ */ s("path", {
  d: "M208,160H48l80-80Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ s("path", { d: "M213.66,154.34l-80-80a8,8,0,0,0-11.32,0l-80,80A8,8,0,0,0,48,168H208a8,8,0,0,0,5.66-13.66ZM67.31,152,128,91.31,188.69,152Z" }, null, -1), z = [
  C,
  S
], B = { key: 2 }, L = /* @__PURE__ */ s("path", { d: "M215.39,163.06A8,8,0,0,1,208,168H48a8,8,0,0,1-5.66-13.66l80-80a8,8,0,0,1,11.32,0l80,80A8,8,0,0,1,215.39,163.06Z" }, null, -1), H = [
  L
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M212.24,164.24a6,6,0,0,1-8.48,0L128,88.49,52.24,164.24a6,6,0,0,1-8.48-8.48l80-80a6,6,0,0,1,8.48,0l80,80A6,6,0,0,1,212.24,164.24Z" }, null, -1), E = [
  b
], P = { key: 4 }, V = /* @__PURE__ */ s("path", { d: "M213.66,165.66a8,8,0,0,1-11.32,0L128,91.31,53.66,165.66a8,8,0,0,1-11.32-11.32l80-80a8,8,0,0,1,11.32,0l80,80A8,8,0,0,1,213.66,165.66Z" }, null, -1), W = [
  V
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M210.83,162.83a4,4,0,0,1-5.66,0L128,85.66,50.83,162.83a4,4,0,0,1-5.66-5.66l80-80a4,4,0,0,1,5.66,0l80,80A4,4,0,0,1,210.83,162.83Z" }, null, -1), U = [
  j
], q = {
  name: "PhCaretUp"
}, G = /* @__PURE__ */ y({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(a) {
    const i = a, _ = l("weight", "regular"), h = l("size", "1em"), p = l("color", "currentColor"), g = l("mirrored", !1), n = r(() => i.weight ?? _), d = r(() => i.size ?? h), u = r(() => i.color ?? p), m = r(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (c, D) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(u),
      transform: t(m)
    }, c.$attrs), [
      w(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", Z, v)) : t(n) === "duotone" ? (o(), e("g", x, z)) : t(n) === "fill" ? (o(), e("g", B, H)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, W)) : t(n) === "thin" ? (o(), e("g", $, U)) : M("", !0)
    ], 16, k));
  }
});
export {
  G as default
};
