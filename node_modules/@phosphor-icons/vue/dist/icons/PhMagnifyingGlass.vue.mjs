import { defineComponent as y, inject as l, computed as r, openBlock as o, createElementBlock as e, mergeProps as M, unref as t, renderSlot as f, createCommentVNode as Z, createElementVNode as s } from "vue";
const w = ["width", "height", "fill", "transform"], A = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M232.49,215.51,185,168a92.12,92.12,0,1,0-17,17l47.53,47.54a12,12,0,0,0,17-17ZM44,112a68,68,0,1,1,68,68A68.07,68.07,0,0,1,44,112Z" }, null, -1), v = [
  k
], x = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M192,112a80,80,0,1,1-80-80A80,80,0,0,1,192,112Z",
  opacity: "0.2"
}, null, -1), z = /* @__PURE__ */ s("path", { d: "M229.66,218.34,179.6,168.28a88.21,88.21,0,1,0-11.32,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z" }, null, -1), C = [
  S,
  z
], B = { key: 2 }, N = /* @__PURE__ */ s("path", { d: "M168,112a56,56,0,1,1-56-56A56,56,0,0,1,168,112Zm61.66,117.66a8,8,0,0,1-11.32,0l-50.06-50.07a88,88,0,1,1,11.32-11.31l50.06,50.06A8,8,0,0,1,229.66,229.66ZM112,184a72,72,0,1,0-72-72A72.08,72.08,0,0,0,112,184Z" }, null, -1), b = [
  N
], E = { key: 3 }, P = /* @__PURE__ */ s("path", { d: "M228.24,219.76l-51.38-51.38a86.15,86.15,0,1,0-8.48,8.48l51.38,51.38a6,6,0,0,0,8.48-8.48ZM38,112a74,74,0,1,1,74,74A74.09,74.09,0,0,1,38,112Z" }, null, -1), V = [
  P
], W = { key: 4 }, $ = /* @__PURE__ */ s("path", { d: "M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z" }, null, -1), j = [
  $
], G = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M226.83,221.17l-52.7-52.7a84.1,84.1,0,1,0-5.66,5.66l52.7,52.7a4,4,0,0,0,5.66-5.66ZM36,112a76,76,0,1,1,76,76A76.08,76.08,0,0,1,36,112Z" }, null, -1), D = [
  q
], F = {
  name: "PhMagnifyingGlass"
}, J = /* @__PURE__ */ y({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const i = c, _ = l("weight", "regular"), h = l("size", "1em"), p = l("color", "currentColor"), g = l("mirrored", !1), n = r(() => i.weight ?? _), a = r(() => i.size ?? h), m = r(() => i.color ?? p), u = r(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, H) => (o(), e("svg", M({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", A, v)) : t(n) === "duotone" ? (o(), e("g", x, C)) : t(n) === "fill" ? (o(), e("g", B, b)) : t(n) === "light" ? (o(), e("g", E, V)) : t(n) === "regular" ? (o(), e("g", W, j)) : t(n) === "thin" ? (o(), e("g", G, D)) : Z("", !0)
    ], 16, w));
  }
});
export {
  J as default
};
