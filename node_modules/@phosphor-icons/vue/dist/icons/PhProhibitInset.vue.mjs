import { defineComponent as Z, inject as r, computed as l, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as M, createCommentVNode as f, createElementVNode as s } from "vue";
const A = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M168.49,151.51a12,12,0,0,1-17,17l-64-64a12,12,0,0,1,17-17ZM236,128A108,108,0,1,1,128,20,108.12,108.12,0,0,1,236,128Zm-24,0a84,84,0,1,0-84,84A84.09,84.09,0,0,0,212,128Z" }, null, -1), v = [
  k
], x = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M224,128a96,96,0,1,1-96-96A96,96,0,0,1,224,128Z",
  opacity: "0.2"
}, null, -1), z = /* @__PURE__ */ s("path", { d: "M165.66,154.34a8,8,0,0,1-11.32,11.32l-64-64a8,8,0,0,1,11.32-11.32ZM232,128A104,104,0,1,1,128,24,104.11,104.11,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Z" }, null, -1), C = [
  S,
  z
], B = { key: 2 }, b = /* @__PURE__ */ s("path", { d: "M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm37.66,141.66a8,8,0,0,1-11.32,0l-64-64a8,8,0,0,1,11.32-11.32l64,64A8,8,0,0,1,165.66,165.66Z" }, null, -1), N = [
  b
], P = { key: 3 }, E = /* @__PURE__ */ s("path", { d: "M164.24,155.76a6,6,0,1,1-8.48,8.48l-64-64a6,6,0,0,1,8.48-8.48ZM230,128A102,102,0,1,1,128,26,102.12,102.12,0,0,1,230,128Zm-12,0a90,90,0,1,0-90,90A90.1,90.1,0,0,0,218,128Z" }, null, -1), V = [
  E
], W = { key: 4 }, $ = /* @__PURE__ */ s("path", { d: "M165.66,154.34a8,8,0,0,1-11.32,11.32l-64-64a8,8,0,0,1,11.32-11.32ZM232,128A104,104,0,1,1,128,24,104.11,104.11,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Z" }, null, -1), j = [
  $
], I = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M162.83,157.17a4,4,0,0,1-5.66,5.66l-64-64a4,4,0,0,1,5.66-5.66ZM228,128A100,100,0,1,1,128,28,100.11,100.11,0,0,1,228,128Zm-8,0a92,92,0,1,0-92,92A92.1,92.1,0,0,0,220,128Z" }, null, -1), D = [
  q
], F = {
  name: "PhProhibitInset"
}, J = /* @__PURE__ */ Z({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(a) {
    const i = a, _ = r("weight", "regular"), h = r("size", "1em"), p = r("color", "currentColor"), m = r("mirrored", !1), n = l(() => i.weight ?? _), d = l(() => i.size ?? h), g = l(() => i.color ?? p), u = l(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : m ? "scale(-1, 1)" : void 0);
    return (c, G) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(u)
    }, c.$attrs), [
      M(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", w, v)) : t(n) === "duotone" ? (o(), e("g", x, C)) : t(n) === "fill" ? (o(), e("g", B, N)) : t(n) === "light" ? (o(), e("g", P, V)) : t(n) === "regular" ? (o(), e("g", W, j)) : t(n) === "thin" ? (o(), e("g", I, D)) : f("", !0)
    ], 16, A));
  }
});
export {
  J as default
};
