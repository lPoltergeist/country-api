import { defineComponent as v, inject as h, computed as i, openBlock as o, createElementBlock as e, mergeProps as M, unref as t, renderSlot as Z, createCommentVNode as m, createElementVNode as s } from "vue";
const u = ["width", "height", "fill", "transform"], y = { key: 0 }, f = /* @__PURE__ */ s("path", { d: "M224,196h-4V40a12,12,0,0,0-12-12H152a12,12,0,0,0-12,12V76H96A12,12,0,0,0,84,88v36H48a12,12,0,0,0-12,12v60H32a12,12,0,0,0,0,24H224a12,12,0,0,0,0-24ZM164,52h32V196H164Zm-56,48h32v96H108ZM60,148H84v48H60Z" }, null, -1), w = [
  f
], k = { key: 1 }, x = /* @__PURE__ */ s("path", {
  d: "M208,40V208H152V40Z",
  opacity: "0.2"
}, null, -1), C = /* @__PURE__ */ s("path", { d: "M224,200h-8V40a8,8,0,0,0-8-8H152a8,8,0,0,0-8,8V80H96a8,8,0,0,0-8,8v40H48a8,8,0,0,0-8,8v64H32a8,8,0,0,0,0,16H224a8,8,0,0,0,0-16ZM160,48h40V200H160ZM104,96h40V200H104ZM56,144H88v56H56Z" }, null, -1), S = [
  x,
  C
], z = { key: 2 }, B = /* @__PURE__ */ s("path", { d: "M232,208a8,8,0,0,1-8,8H32a8,8,0,0,1,0-16h8V136a8,8,0,0,1,8-8H72a8,8,0,0,1,8,8v64H96V88a8,8,0,0,1,8-8h32a8,8,0,0,1,8,8V200h16V40a8,8,0,0,1,8-8h40a8,8,0,0,1,8,8V200h8A8,8,0,0,1,232,208Z" }, null, -1), N = [
  B
], b = { key: 3 }, A = /* @__PURE__ */ s("path", { d: "M224,202H214V40a6,6,0,0,0-6-6H152a6,6,0,0,0-6,6V82H96a6,6,0,0,0-6,6v42H48a6,6,0,0,0-6,6v66H32a6,6,0,0,0,0,12H224a6,6,0,0,0,0-12ZM158,46h44V202H158ZM102,94h44V202H102ZM54,142H90v60H54Z" }, null, -1), E = [
  A
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M224,200h-8V40a8,8,0,0,0-8-8H152a8,8,0,0,0-8,8V80H96a8,8,0,0,0-8,8v40H48a8,8,0,0,0-8,8v64H32a8,8,0,0,0,0,16H224a8,8,0,0,0,0-16ZM160,48h40V200H160ZM104,96h40V200H104ZM56,144H88v56H56Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M224,204H212V40a4,4,0,0,0-4-4H152a4,4,0,0,0-4,4V84H96a4,4,0,0,0-4,4v44H48a4,4,0,0,0-4,4v68H32a4,4,0,0,0,0,8H224a4,4,0,0,0,0-8ZM156,44h48V204H156ZM100,92h48V204H100ZM52,140H92v64H52Z" }, null, -1), D = [
  q
], F = {
  name: "PhChartBar"
}, J = /* @__PURE__ */ v({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const n = c, H = h("weight", "regular"), l = h("size", "1em"), _ = h("color", "currentColor"), p = h("mirrored", !1), a = i(() => n.weight ?? H), r = i(() => n.size ?? l), V = i(() => n.color ?? _), g = i(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, G) => (o(), e("svg", M({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(V),
      transform: t(g)
    }, d.$attrs), [
      Z(d.$slots, "default"),
      t(a) === "bold" ? (o(), e("g", y, w)) : t(a) === "duotone" ? (o(), e("g", k, S)) : t(a) === "fill" ? (o(), e("g", z, N)) : t(a) === "light" ? (o(), e("g", b, E)) : t(a) === "regular" ? (o(), e("g", P, $)) : t(a) === "thin" ? (o(), e("g", j, D)) : m("", !0)
    ], 16, u));
  }
});
export {
  J as default
};
