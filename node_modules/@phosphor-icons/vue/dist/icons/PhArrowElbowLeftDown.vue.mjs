import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as H, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as s } from "vue";
const V = ["width", "height", "fill", "transform"], M = { key: 0 }, A = /* @__PURE__ */ s("path", { d: "M236,64a12,12,0,0,1-12,12H92V179l27.51-27.52a12,12,0,0,1,17,17l-48,48a12,12,0,0,1-17,0l-48-48a12,12,0,1,1,17-17L68,179V64A12,12,0,0,1,80,52H224A12,12,0,0,1,236,64Z" }, null, -1), k = [
  A
], v = { key: 1 }, Z = /* @__PURE__ */ s("path", {
  d: "M128,160,80,208,32,160Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M224,56H80a8,8,0,0,0-8,8v88H32a8,8,0,0,0-5.66,13.66l48,48a8,8,0,0,0,11.32,0l48-48A8,8,0,0,0,128,152H88V72H224a8,8,0,0,0,0-16ZM80,196.69,51.31,168h57.38Z" }, null, -1), S = [
  Z,
  x
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M232,64a8,8,0,0,1-8,8H88v80h40a8,8,0,0,1,5.66,13.66l-48,48a8,8,0,0,1-11.32,0l-48-48A8,8,0,0,1,32,152H72V64a8,8,0,0,1,8-8H224A8,8,0,0,1,232,64Z" }, null, -1), L = [
  C
], B = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M230,64a6,6,0,0,1-6,6H86V193.51l37.76-37.75a6,6,0,0,1,8.48,8.48l-48,48a6,6,0,0,1-8.48,0l-48-48a6,6,0,0,1,8.48-8.48L74,193.51V64a6,6,0,0,1,6-6H224A6,6,0,0,1,230,64Z" }, null, -1), E = [
  b
], N = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M232,64a8,8,0,0,1-8,8H88V188.69l34.34-34.35a8,8,0,0,1,11.32,11.32l-48,48a8,8,0,0,1-11.32,0l-48-48a8,8,0,0,1,11.32-11.32L72,188.69V64a8,8,0,0,1,8-8H224A8,8,0,0,1,232,64Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M228,64a4,4,0,0,1-4,4H84V198.34l41.17-41.17a4,4,0,0,1,5.66,5.66l-48,48a4,4,0,0,1-5.66,0l-48-48a4,4,0,0,1,5.66-5.66L76,198.34V64a4,4,0,0,1,4-4H224A4,4,0,0,1,228,64Z" }, null, -1), D = [
  j
], q = {
  name: "PhArrowElbowLeftDown"
}, I = /* @__PURE__ */ y({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), n = r(() => l.weight ?? _), a = r(() => l.size ?? h), u = r(() => l.color ?? p), m = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", H({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", M, k)) : t(n) === "duotone" ? (o(), e("g", v, S)) : t(n) === "fill" ? (o(), e("g", z, L)) : t(n) === "light" ? (o(), e("g", B, E)) : t(n) === "regular" ? (o(), e("g", N, W)) : t(n) === "thin" ? (o(), e("g", $, D)) : w("", !0)
    ], 16, V));
  }
});
export {
  I as default
};
