import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as H, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as s } from "vue";
const V = ["width", "height", "fill", "transform"], M = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M232.49,104.49a12,12,0,0,1-17,0L188,77V192a12,12,0,0,1-12,12H32a12,12,0,0,1,0-24H164V77l-27.51,27.52a12,12,0,1,1-17-17l48-48a12,12,0,0,1,17,0l48,48A12,12,0,0,1,232.49,104.49Z" }, null, -1), v = [
  k
], A = { key: 1 }, Z = /* @__PURE__ */ s("path", {
  d: "M224,96H128l48-48Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M229.66,90.34l-48-48a8,8,0,0,0-11.32,0l-48,48A8,8,0,0,0,128,104h40v80H32a8,8,0,0,0,0,16H176a8,8,0,0,0,8-8V104h40a8,8,0,0,0,5.66-13.66ZM147.31,88,176,59.31,204.69,88Z" }, null, -1), S = [
  Z,
  x
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M231.39,99.06A8,8,0,0,1,224,104H184v88a8,8,0,0,1-8,8H32a8,8,0,0,1,0-16H168V104H128a8,8,0,0,1-5.66-13.66l48-48a8,8,0,0,1,11.32,0l48,48A8,8,0,0,1,231.39,99.06Z" }, null, -1), L = [
  C
], B = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M228.24,100.24a6,6,0,0,1-8.48,0L182,62.49V192a6,6,0,0,1-6,6H32a6,6,0,0,1,0-12H170V62.49l-37.76,37.75a6,6,0,1,1-8.48-8.48l48-48a6,6,0,0,1,8.48,0l48,48A6,6,0,0,1,228.24,100.24Z" }, null, -1), E = [
  b
], N = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M229.66,101.66a8,8,0,0,1-11.32,0L184,67.31V192a8,8,0,0,1-8,8H32a8,8,0,0,1,0-16H168V67.31l-34.34,34.35a8,8,0,0,1-11.32-11.32l48-48a8,8,0,0,1,11.32,0l48,48A8,8,0,0,1,229.66,101.66Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M226.83,98.83a4,4,0,0,1-5.66,0L180,57.66V192a4,4,0,0,1-4,4H32a4,4,0,0,1,0-8H172V57.66L130.83,98.83a4,4,0,1,1-5.66-5.66l48-48a4,4,0,0,1,5.66,0l48,48A4,4,0,0,1,226.83,98.83Z" }, null, -1), R = [
  j
], U = {
  name: "PhArrowElbowRightUp"
}, F = /* @__PURE__ */ y({
  ...U,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, h = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), n = r(() => l.weight ?? h), a = r(() => l.size ?? _), u = r(() => l.color ?? p), m = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", H({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", M, v)) : t(n) === "duotone" ? (o(), e("g", A, S)) : t(n) === "fill" ? (o(), e("g", z, L)) : t(n) === "light" ? (o(), e("g", B, E)) : t(n) === "regular" ? (o(), e("g", N, W)) : t(n) === "thin" ? (o(), e("g", $, R)) : w("", !0)
    ], 16, V));
  }
});
export {
  F as default
};
