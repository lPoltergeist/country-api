import { defineComponent as v, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as g, unref as t, renderSlot as u, createCommentVNode as Z, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], y = { key: 0 }, f = /* @__PURE__ */ s("path", { d: "M192,20a12,12,0,0,0-12,12V60H76V32a12,12,0,0,0-24,0V224a12,12,0,0,0,24,0V196H180v28a12,12,0,0,0,24,0V32A12,12,0,0,0,192,20ZM180,84v32H76V84ZM76,172V140H180v32Z" }, null, -1), w = [
  f
], k = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M192,32V224H64V32Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M192,24a8,8,0,0,0-8,8V64H72V32a8,8,0,0,0-16,0V224a8,8,0,0,0,16,0V192H184v32a8,8,0,0,0,16,0V32A8,8,0,0,0,192,24Zm-8,56v40H72V80ZM72,176V136H184v40Z" }, null, -1), A = [
  S,
  x
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M192,24a8,8,0,0,0-8,8v8H72V32a8,8,0,0,0-16,0V224a8,8,0,0,0,16,0v-8H184v8a8,8,0,0,0,16,0V32A8,8,0,0,0,192,24ZM176,184H80a8,8,0,0,1,0-16h96a8,8,0,0,1,0,16Zm0-48H80a8,8,0,0,1,0-16h96a8,8,0,0,1,0,16Zm0-48H80a8,8,0,0,1,0-16h96a8,8,0,0,1,0,16Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M192,26a6,6,0,0,0-6,6V66H70V32a6,6,0,0,0-12,0V224a6,6,0,0,0,12,0V190H186v34a6,6,0,0,0,12,0V32A6,6,0,0,0,192,26Zm-6,52v44H70V78ZM70,178V134H186v44Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M192,24a8,8,0,0,0-8,8V64H72V32a8,8,0,0,0-16,0V224a8,8,0,0,0,16,0V192H184v32a8,8,0,0,0,16,0V32A8,8,0,0,0,192,24Zm-8,56v40H72V80ZM72,176V136H184v40Z" }, null, -1), $ = [
  W
], j = { key: 5 }, L = /* @__PURE__ */ s("path", { d: "M192,28a4,4,0,0,0-4,4V68H68V32a4,4,0,0,0-8,0V224a4,4,0,0,0,8,0V188H188v36a4,4,0,0,0,8,0V32A4,4,0,0,0,192,28Zm-4,48v48H68V76ZM68,180V132H188v48Z" }, null, -1), q = [
  L
], D = {
  name: "PhLadderSimple"
}, I = /* @__PURE__ */ v({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const a = l, h = i("weight", "regular"), _ = i("size", "1em"), V = i("color", "currentColor"), p = i("mirrored", !1), n = r(() => a.weight ?? h), d = r(() => a.size ?? _), m = r(() => a.color ?? V), H = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (c, F) => (o(), e("svg", g({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(m),
      transform: t(H)
    }, c.$attrs), [
      u(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", y, w)) : t(n) === "duotone" ? (o(), e("g", k, A)) : t(n) === "fill" ? (o(), e("g", z, B)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, $)) : t(n) === "thin" ? (o(), e("g", j, q)) : Z("", !0)
    ], 16, M));
  }
});
export {
  I as default
};
