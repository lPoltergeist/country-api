import { defineComponent as Z, inject as r, computed as a, openBlock as o, createElementBlock as e, mergeProps as A, unref as t, renderSlot as y, createCommentVNode as M, createElementVNode as s } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M162.44,118.91a52,52,0,1,0-68.88,0,60,60,0,1,0,68.88,0ZM100,80a28,28,0,1,1,28,28A28,28,0,0,1,100,80Zm28,124a36,36,0,1,1,36-36A36,36,0,0,1,128,204Z" }, null, -1), v = [
  k
], x = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M216,40V216a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V40A16,16,0,0,1,56,24H200A16,16,0,0,1,216,40Z",
  opacity: "0.2"
}, null, -1), V = /* @__PURE__ */ s("path", { d: "M155.55,119.27a48,48,0,1,0-55.1,0,56,56,0,1,0,55.1,0ZM96,80a32,32,0,1,1,32,32A32,32,0,0,1,96,80Zm32,128a40,40,0,1,1,40-40A40,40,0,0,1,128,208Z" }, null, -1), z = [
  S,
  V
], C = { key: 2 }, B = /* @__PURE__ */ s("path", { d: "M108,92a20,20,0,1,1,20,20A20,20,0,0,1,108,92Zm20,36a28,28,0,1,0,28,28A28,28,0,0,0,128,128Zm88-88V216a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V40A16,16,0,0,1,56,24H200A16,16,0,0,1,216,40ZM172,156a44,44,0,0,0-20.23-37,36,36,0,1,0-47.54,0A44,44,0,1,0,172,156Z" }, null, -1), H = [
  B
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M151.62,119.45a46,46,0,1,0-47.24,0,54,54,0,1,0,47.24,0ZM94,80a34,34,0,1,1,34,34A34,34,0,0,1,94,80Zm34,130a42,42,0,1,1,42-42A42,42,0,0,1,128,210Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M155.55,119.27a48,48,0,1,0-55.1,0,56,56,0,1,0,55.1,0ZM96,80a32,32,0,1,1,32,32A32,32,0,0,1,96,80Zm32,128a40,40,0,1,1,40-40A40,40,0,0,1,128,208Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M147.08,119.64a44,44,0,1,0-38.16,0,52,52,0,1,0,38.16,0ZM92,80a36,36,0,1,1,36,36A36,36,0,0,1,92,80Zm36,132a44,44,0,1,1,44-44A44.05,44.05,0,0,1,128,212Z" }, null, -1), D = [
  q
], F = {
  name: "PhNumberEight"
}, J = /* @__PURE__ */ Z({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = r("weight", "regular"), h = r("size", "1em"), m = r("color", "currentColor"), p = r("mirrored", !1), n = a(() => i.weight ?? _), d = a(() => i.size ?? h), g = a(() => i.color ?? m), u = a(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (c, G) => (o(), e("svg", A({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(u)
    }, c.$attrs), [
      y(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", w, v)) : t(n) === "duotone" ? (o(), e("g", x, z)) : t(n) === "fill" ? (o(), e("g", C, H)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, $)) : t(n) === "thin" ? (o(), e("g", j, D)) : M("", !0)
    ], 16, f));
  }
});
export {
  J as default
};
