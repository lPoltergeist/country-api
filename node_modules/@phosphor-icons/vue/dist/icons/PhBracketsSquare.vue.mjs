import { defineComponent as m, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as u, unref as t, renderSlot as y, createCommentVNode as M, createElementVNode as a } from "vue";
const Z = ["width", "height", "fill", "transform"], f = { key: 0 }, w = /* @__PURE__ */ a("path", { d: "M52,52V204H80a12,12,0,0,1,0,24H40a12,12,0,0,1-12-12V40A12,12,0,0,1,40,28H80a12,12,0,0,1,0,24ZM216,28H176a12,12,0,0,0,0,24h28V204H176a12,12,0,0,0,0,24h40a12,12,0,0,0,12-12V40A12,12,0,0,0,216,28Z" }, null, -1), k = [
  w
], A = { key: 1 }, v = /* @__PURE__ */ a("path", {
  d: "M216,40V216H40V40Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ a("path", { d: "M48,48V208H80a8,8,0,0,1,0,16H40a8,8,0,0,1-8-8V40a8,8,0,0,1,8-8H80a8,8,0,0,1,0,16ZM216,32H176a8,8,0,0,0,0,16h32V208H176a8,8,0,0,0,0,16h40a8,8,0,0,0,8-8V40A8,8,0,0,0,216,32Z" }, null, -1), x = [
  v,
  S
], z = { key: 2 }, B = /* @__PURE__ */ a("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM104,176a8,8,0,0,1,0,16H72a8,8,0,0,1-8-8V72a8,8,0,0,1,8-8h32a8,8,0,0,1,0,16H80v96Zm88,8a8,8,0,0,1-8,8H152a8,8,0,0,1,0-16h24V80H152a8,8,0,0,1,0-16h32a8,8,0,0,1,8,8Z" }, null, -1), C = [
  B
], N = { key: 3 }, b = /* @__PURE__ */ a("path", { d: "M46,46V210H80a6,6,0,0,1,0,12H40a6,6,0,0,1-6-6V40a6,6,0,0,1,6-6H80a6,6,0,0,1,0,12ZM216,34H176a6,6,0,0,0,0,12h34V210H176a6,6,0,0,0,0,12h40a6,6,0,0,0,6-6V40A6,6,0,0,0,216,34Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ a("path", { d: "M48,48V208H80a8,8,0,0,1,0,16H40a8,8,0,0,1-8-8V40a8,8,0,0,1,8-8H80a8,8,0,0,1,0,16ZM216,32H176a8,8,0,0,0,0,16h32V208H176a8,8,0,0,0,0,16h40a8,8,0,0,0,8-8V40A8,8,0,0,0,216,32Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ a("path", { d: "M44,44V212H80a4,4,0,0,1,0,8H40a4,4,0,0,1-4-4V40a4,4,0,0,1,4-4H80a4,4,0,0,1,0,8Zm172-8H176a4,4,0,0,0,0,8h36V212H176a4,4,0,0,0,0,8h40a4,4,0,0,0,4-4V40A4,4,0,0,0,216,36Z" }, null, -1), D = [
  q
], F = {
  name: "PhBracketsSquare"
}, J = /* @__PURE__ */ m({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const n = d, l = i("weight", "regular"), _ = i("size", "1em"), H = i("color", "currentColor"), p = i("mirrored", !1), s = r(() => n.weight ?? l), h = r(() => n.size ?? _), V = r(() => n.color ?? H), g = r(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (c, G) => (o(), e("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(h),
      height: t(h),
      fill: t(V),
      transform: t(g)
    }, c.$attrs), [
      y(c.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", f, k)) : t(s) === "duotone" ? (o(), e("g", A, x)) : t(s) === "fill" ? (o(), e("g", z, C)) : t(s) === "light" ? (o(), e("g", N, E)) : t(s) === "regular" ? (o(), e("g", P, $)) : t(s) === "thin" ? (o(), e("g", j, D)) : M("", !0)
    ], 16, Z));
  }
});
export {
  J as default
};
