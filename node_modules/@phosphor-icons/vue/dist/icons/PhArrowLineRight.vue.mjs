import { defineComponent as M, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as V, unref as t, renderSlot as y, createCommentVNode as Z, createElementVNode as s } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, v = /* @__PURE__ */ s("path", { d: "M184.49,119.51a12,12,0,0,1,0,17l-72,72a12,12,0,0,1-17-17L147,140H32a12,12,0,0,1,0-24H147L95.51,64.49a12,12,0,0,1,17-17ZM216,28a12,12,0,0,0-12,12V216a12,12,0,0,0,24,0V40A12,12,0,0,0,216,28Z" }, null, -1), H = [
  v
], L = { key: 1 }, k = /* @__PURE__ */ s("path", {
  d: "M184,128l-72,72V56Z",
  opacity: "0.2"
}, null, -1), A = /* @__PURE__ */ s("path", { d: "M117.66,50.34A8,8,0,0,0,104,56v64H32a8,8,0,0,0,0,16h72v64a8,8,0,0,0,13.66,5.66l72-72a8,8,0,0,0,0-11.32ZM120,180.69V75.31L172.69,128ZM224,40V216a8,8,0,0,1-16,0V40a8,8,0,0,1,16,0Z" }, null, -1), x = [
  k,
  A
], S = { key: 2 }, z = /* @__PURE__ */ s("path", { d: "M224,40V216a8,8,0,0,1-16,0V40a8,8,0,0,1,16,0ZM117.66,50.34A8,8,0,0,0,104,56v64H32a8,8,0,0,0,0,16h72v64a8,8,0,0,0,13.66,5.66l72-72a8,8,0,0,0,0-11.32Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M188.24,123.76a6,6,0,0,1,0,8.48l-72,72a6,6,0,0,1-8.48-8.48L169.51,134H32a6,6,0,0,1,0-12H169.51L107.76,60.24a6,6,0,0,1,8.48-8.48ZM216,34a6,6,0,0,0-6,6V216a6,6,0,0,0,12,0V40A6,6,0,0,0,216,34Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M189.66,122.34a8,8,0,0,1,0,11.32l-72,72a8,8,0,0,1-11.32-11.32L164.69,136H32a8,8,0,0,1,0-16H164.69L106.34,61.66a8,8,0,0,1,11.32-11.32ZM216,32a8,8,0,0,0-8,8V216a8,8,0,0,0,16,0V40A8,8,0,0,0,216,32Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M186.83,125.17a4,4,0,0,1,0,5.66l-72,72a4,4,0,0,1-5.66-5.66L174.34,132H32a4,4,0,0,1,0-8H174.34L109.17,58.83a4,4,0,0,1,5.66-5.66ZM216,36a4,4,0,0,0-4,4V216a4,4,0,0,0,8,0V40A4,4,0,0,0,216,36Z" }, null, -1), R = [
  j
], q = {
  name: "PhArrowLineRight"
}, G = /* @__PURE__ */ M({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const a = c, h = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), n = r(() => a.weight ?? h), l = r(() => a.size ?? _), u = r(() => a.color ?? p), m = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, D) => (o(), e("svg", V({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(l),
      height: t(l),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", w, H)) : t(n) === "duotone" ? (o(), e("g", L, x)) : t(n) === "fill" ? (o(), e("g", S, C)) : t(n) === "light" ? (o(), e("g", B, b)) : t(n) === "regular" ? (o(), e("g", E, W)) : t(n) === "thin" ? (o(), e("g", $, R)) : Z("", !0)
    ], 16, f));
  }
});
export {
  G as default
};
