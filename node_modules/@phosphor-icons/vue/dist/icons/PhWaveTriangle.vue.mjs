import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as L, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], Z = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M241.73,135l-52,72a12,12,0,0,1-19.46,0L76,76.5,33.73,135A12,12,0,1,1,14.27,121l52-72a12,12,0,0,1,19.46,0L180,179.5,222.27,121A12,12,0,1,1,241.73,135Z" }, null, -1), v = [
  k
], x = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M76,56l52,72H24Zm156,72H128l52,72Z",
  opacity: "0.2"
}, null, -1), z = /* @__PURE__ */ s("path", { d: "M238.48,132.68l-52,72a8,8,0,0,1-13,0L76,69.66l-45.51,63a8,8,0,1,1-13-9.36l52-72a8,8,0,0,1,13,0l97.51,135,45.51-63a8,8,0,1,1,13,9.36Z" }, null, -1), A = [
  S,
  z
], C = { key: 2 }, B = /* @__PURE__ */ s("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40Zm-9.85,93.12-40,48A8,8,0,0,1,160,184h-.43a8,8,0,0,1-6.23-3.55l-58-87.09L62.15,133.12a8,8,0,0,1-12.3-10.24l40-48a8,8,0,0,1,12.81.68l58.05,87.09,33.14-39.77a8,8,0,1,1,12.3,10.24Z" }, null, -1), H = [
  B
], V = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M236.86,131.51l-52,72a6,6,0,0,1-9.72,0L76,66.25,28.86,131.51a6,6,0,1,1-9.72-7l52-72a6,6,0,0,1,9.72,0L180,189.75l47.14-65.26a6,6,0,0,1,9.72,7Z" }, null, -1), W = [
  N
], b = { key: 4 }, E = /* @__PURE__ */ s("path", { d: "M238.48,132.68l-52,72a8,8,0,0,1-13,0L76,69.66l-45.51,63a8,8,0,1,1-13-9.36l52-72a8,8,0,0,1,13,0l97.51,135,45.51-63a8,8,0,1,1,13,9.36Z" }, null, -1), P = [
  E
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M235.24,130.34l-52,72a4,4,0,0,1-6.48,0L76,62.83,27.24,130.34a4,4,0,1,1-6.48-4.68l52-72a4,4,0,0,1,6.48,0L180,193.17l48.76-67.51a4,4,0,0,1,6.48,4.68Z" }, null, -1), T = [
  j
], q = {
  name: "PhWaveTriangle"
}, G = /* @__PURE__ */ y({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const n = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), l = r(() => n.weight ?? _), a = r(() => n.size ?? h), m = r(() => n.color ?? p), u = r(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, D) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      w(d.$slots, "default"),
      t(l) === "bold" ? (o(), e("g", Z, v)) : t(l) === "duotone" ? (o(), e("g", x, A)) : t(l) === "fill" ? (o(), e("g", C, H)) : t(l) === "light" ? (o(), e("g", V, W)) : t(l) === "regular" ? (o(), e("g", b, P)) : t(l) === "thin" ? (o(), e("g", $, T)) : L("", !0)
    ], 16, M));
  }
});
export {
  G as default
};
