import { defineComponent as g, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as u, unref as t, renderSlot as Z, createCommentVNode as y, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], f = { key: 0 }, w = /* @__PURE__ */ s("path", { d: "M216,28H88A12,12,0,0,0,76,40V76H40A12,12,0,0,0,28,88V216a12,12,0,0,0,12,12H168a12,12,0,0,0,12-12V180h36a12,12,0,0,0,12-12V40A12,12,0,0,0,216,28ZM156,204H52V100H156Zm48-48H180V88a12,12,0,0,0-12-12H100V52H204Z" }, null, -1), k = [
  w
], A = { key: 1 }, v = /* @__PURE__ */ s("path", {
  d: "M216,40V168H168V88H88V40Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M216,32H88a8,8,0,0,0-8,8V80H40a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H168a8,8,0,0,0,8-8V176h40a8,8,0,0,0,8-8V40A8,8,0,0,0,216,32ZM160,208H48V96H160Zm48-48H176V88a8,8,0,0,0-8-8H96V48H208Z" }, null, -1), C = [
  v,
  x
], S = { key: 2 }, z = /* @__PURE__ */ s("path", { d: "M216,32H88a8,8,0,0,0-8,8V80H40a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H168a8,8,0,0,0,8-8V176h40a8,8,0,0,0,8-8V40A8,8,0,0,0,216,32Zm-8,128H176V88a8,8,0,0,0-8-8H96V48H208Z" }, null, -1), B = [
  z
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M216,34H88a6,6,0,0,0-6,6V82H40a6,6,0,0,0-6,6V216a6,6,0,0,0,6,6H168a6,6,0,0,0,6-6V174h42a6,6,0,0,0,6-6V40A6,6,0,0,0,216,34ZM162,210H46V94H162Zm48-48H174V88a6,6,0,0,0-6-6H94V46H210Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M216,32H88a8,8,0,0,0-8,8V80H40a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H168a8,8,0,0,0,8-8V176h40a8,8,0,0,0,8-8V40A8,8,0,0,0,216,32ZM160,208H48V96H160Zm48-48H176V88a8,8,0,0,0-8-8H96V48H208Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M216,36H88a4,4,0,0,0-4,4V84H40a4,4,0,0,0-4,4V216a4,4,0,0,0,4,4H168a4,4,0,0,0,4-4V172h44a4,4,0,0,0,4-4V40A4,4,0,0,0,216,36ZM164,212H44V92H164Zm48-48H172V88a4,4,0,0,0-4-4H92V44H212Z" }, null, -1), D = [
  q
], F = {
  name: "PhCopy"
}, J = /* @__PURE__ */ g({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const a = h, l = i("weight", "regular"), H = i("size", "1em"), V = i("color", "currentColor"), _ = i("mirrored", !1), n = r(() => a.weight ?? l), d = r(() => a.size ?? H), p = r(() => a.color ?? V), m = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : _ ? "scale(-1, 1)" : void 0);
    return (c, G) => (o(), e("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(p),
      transform: t(m)
    }, c.$attrs), [
      Z(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", f, k)) : t(n) === "duotone" ? (o(), e("g", A, C)) : t(n) === "fill" ? (o(), e("g", S, B)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, $)) : t(n) === "thin" ? (o(), e("g", j, D)) : y("", !0)
    ], 16, M));
  }
});
export {
  J as default
};
