import { defineComponent as V, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as u, unref as t, renderSlot as v, createCommentVNode as Z, createElementVNode as s } from "vue";
const y = ["width", "height", "fill", "transform"], M = { key: 0 }, f = /* @__PURE__ */ s("path", { d: "M44,56V200a12,12,0,0,1-24,0V56a12,12,0,0,1,24,0ZM244,96v64a20,20,0,0,1-20,20H80a20,20,0,0,1-20-20V96A20,20,0,0,1,80,76H224A20,20,0,0,1,244,96Zm-24,4H84v56H220Z" }, null, -1), A = [
  f
], w = { key: 1 }, k = /* @__PURE__ */ s("path", {
  d: "M232,96v64a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V96a8,8,0,0,1,8-8H224A8,8,0,0,1,232,96Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ s("path", { d: "M40,56V200a8,8,0,0,1-16,0V56a8,8,0,0,1,16,0ZM240,96v64a16,16,0,0,1-16,16H72a16,16,0,0,1-16-16V96A16,16,0,0,1,72,80H224A16,16,0,0,1,240,96Zm-16,64V96H72v64H224Z" }, null, -1), x = [
  k,
  S
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M40,56V200a8,8,0,0,1-16,0V56a8,8,0,0,1,16,0ZM224,80H72A16,16,0,0,0,56,96v64a16,16,0,0,0,16,16H224a16,16,0,0,0,16-16V96A16,16,0,0,0,224,80Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M38,56V200a6,6,0,0,1-12,0V56a6,6,0,0,1,12,0ZM238,96v64a14,14,0,0,1-14,14H72a14,14,0,0,1-14-14V96A14,14,0,0,1,72,82H224A14,14,0,0,1,238,96Zm-12,0a2,2,0,0,0-2-2H72a2,2,0,0,0-2,2v64a2,2,0,0,0,2,2H224a2,2,0,0,0,2-2Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M40,56V200a8,8,0,0,1-16,0V56a8,8,0,0,1,16,0ZM240,96v64a16,16,0,0,1-16,16H72a16,16,0,0,1-16-16V96A16,16,0,0,1,72,80H224A16,16,0,0,1,240,96Zm-16,64V96H72v64H224Z" }, null, -1), $ = [
  W
], j = { key: 5 }, L = /* @__PURE__ */ s("path", { d: "M36,56V200a4,4,0,0,1-8,0V56a4,4,0,0,1,8,0ZM236,96v64a12,12,0,0,1-12,12H72a12,12,0,0,1-12-12V96A12,12,0,0,1,72,84H224A12,12,0,0,1,236,96Zm-8,0a4,4,0,0,0-4-4H72a4,4,0,0,0-4,4v64a4,4,0,0,0,4,4H224a4,4,0,0,0,4-4Z" }, null, -1), q = [
  L
], D = {
  name: "PhAlignLeftSimple"
}, I = /* @__PURE__ */ V({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const a = l, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), m = i("mirrored", !1), n = r(() => a.weight ?? _), d = r(() => a.size ?? h), g = r(() => a.color ?? p), H = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : m ? "scale(-1, 1)" : void 0);
    return (c, F) => (o(), e("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(H)
    }, c.$attrs), [
      v(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", M, A)) : t(n) === "duotone" ? (o(), e("g", w, x)) : t(n) === "fill" ? (o(), e("g", z, B)) : t(n) === "light" ? (o(), e("g", N, E)) : t(n) === "regular" ? (o(), e("g", P, $)) : t(n) === "thin" ? (o(), e("g", j, q)) : Z("", !0)
    ], 16, y));
  }
});
export {
  I as default
};
