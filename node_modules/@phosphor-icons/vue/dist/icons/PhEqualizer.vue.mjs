import { defineComponent as g, inject as s, computed as m, openBlock as t, createElementBlock as o, mergeProps as u, unref as a, renderSlot as v, createCommentVNode as M, createElementVNode as e } from "vue";
const y = ["width", "height", "fill", "transform"], f = { key: 0 }, A = /* @__PURE__ */ e("path", { d: "M80,108a12,12,0,0,1-12,12H24a12,12,0,0,1,0-24H68A12,12,0,0,1,80,108ZM68,136H24a12,12,0,0,0,0,24H68a12,12,0,0,0,0-24Zm0,40H24a12,12,0,0,0,0,24H68a12,12,0,0,0,0-24Zm82-40H106a12,12,0,0,0,0,24h44a12,12,0,0,0,0-24Zm0,40H106a12,12,0,0,0,0,24h44a12,12,0,0,0,0-24Zm38-96h44a12,12,0,0,0,0-24H188a12,12,0,0,0,0,24Zm44,16H188a12,12,0,0,0,0,24h44a12,12,0,0,0,0-24Zm0,40H188a12,12,0,0,0,0,24h44a12,12,0,0,0,0-24Zm0,40H188a12,12,0,0,0,0,24h44a12,12,0,0,0,0-24Z" }, null, -1), w = [
  A
], V = { key: 1 }, k = /* @__PURE__ */ e("path", {
  d: "M24,128H72v64H24Zm80,64h48V160H104Zm80-96v96h48V96Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ e("path", { d: "M80,96a8,8,0,0,1-8,8H24a8,8,0,0,1,0-16H72A8,8,0,0,1,80,96Zm72,24H104a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16Zm32-48h48a8,8,0,0,0,0-16H184a8,8,0,0,0,0,16ZM80,128v64a8,8,0,0,1-8,8H24a8,8,0,0,1-8-8V128a8,8,0,0,1,8-8H72A8,8,0,0,1,80,128Zm-16,8H32v48H64Zm96,24v32a8,8,0,0,1-8,8H104a8,8,0,0,1-8-8V160a8,8,0,0,1,8-8h48A8,8,0,0,1,160,160Zm-16,8H112v16h32Zm96-72v96a8,8,0,0,1-8,8H184a8,8,0,0,1-8-8V96a8,8,0,0,1,8-8h48A8,8,0,0,1,240,96Zm-16,8H192v80h32Z" }, null, -1), z = [
  k,
  x
], S = { key: 2 }, C = /* @__PURE__ */ e("path", { d: "M80,96a8,8,0,0,1-8,8H24a8,8,0,0,1,0-16H72A8,8,0,0,1,80,96Zm72,24H104a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16Zm32-48h48a8,8,0,0,0,0-16H184a8,8,0,0,0,0,16ZM72,120H24a8,8,0,0,0-8,8v64a8,8,0,0,0,8,8H72a8,8,0,0,0,8-8V128A8,8,0,0,0,72,120ZM232,88H184a8,8,0,0,0-8,8v96a8,8,0,0,0,8,8h48a8,8,0,0,0,8-8V96A8,8,0,0,0,232,88Zm-80,64H104a8,8,0,0,0-8,8v32a8,8,0,0,0,8,8h48a8,8,0,0,0,8-8V160A8,8,0,0,0,152,152Z" }, null, -1), B = [
  C
], E = { key: 3 }, N = /* @__PURE__ */ e("path", { d: "M78,96a6,6,0,0,1-6,6H24a6,6,0,0,1,0-12H72A6,6,0,0,1,78,96Zm-6,26H24a6,6,0,0,0,0,12H72a6,6,0,0,0,0-12Zm0,32H24a6,6,0,0,0,0,12H72a6,6,0,0,0,0-12Zm0,32H24a6,6,0,0,0,0,12H72a6,6,0,0,0,0-12Zm80-64H104a6,6,0,0,0,0,12h48a6,6,0,0,0,0-12Zm0,32H104a6,6,0,0,0,0,12h48a6,6,0,0,0,0-12Zm0,32H104a6,6,0,0,0,0,12h48a6,6,0,0,0,0-12Zm80-96H184a6,6,0,0,0,0,12h48a6,6,0,0,0,0-12ZM184,70h48a6,6,0,0,0,0-12H184a6,6,0,0,0,0,12Zm48,52H184a6,6,0,0,0,0,12h48a6,6,0,0,0,0-12Zm0,32H184a6,6,0,0,0,0,12h48a6,6,0,0,0,0-12Zm0,32H184a6,6,0,0,0,0,12h48a6,6,0,0,0,0-12Z" }, null, -1), b = [
  N
], P = { key: 4 }, W = /* @__PURE__ */ e("path", { d: "M80,96a8,8,0,0,1-8,8H24a8,8,0,0,1,0-16H72A8,8,0,0,1,80,96Zm-8,24H24a8,8,0,0,0,0,16H72a8,8,0,0,0,0-16Zm0,32H24a8,8,0,0,0,0,16H72a8,8,0,0,0,0-16Zm0,32H24a8,8,0,0,0,0,16H72a8,8,0,0,0,0-16Zm80-64H104a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16Zm0,32H104a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16Zm0,32H104a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16Zm80-96H184a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16ZM184,72h48a8,8,0,0,0,0-16H184a8,8,0,0,0,0,16Zm48,48H184a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16Zm0,32H184a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16Zm0,32H184a8,8,0,0,0,0,16h48a8,8,0,0,0,0-16Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ e("path", { d: "M76,96a4,4,0,0,1-4,4H24a4,4,0,0,1,0-8H72A4,4,0,0,1,76,96Zm-4,28H24a4,4,0,0,0,0,8H72a4,4,0,0,0,0-8Zm0,32H24a4,4,0,0,0,0,8H72a4,4,0,0,0,0-8Zm0,32H24a4,4,0,0,0,0,8H72a4,4,0,0,0,0-8Zm80-64H104a4,4,0,0,0,0,8h48a4,4,0,0,0,0-8Zm0,32H104a4,4,0,0,0,0,8h48a4,4,0,0,0,0-8Zm0,32H104a4,4,0,0,0,0,8h48a4,4,0,0,0,0-8Zm80-96H184a4,4,0,0,0,0,8h48a4,4,0,0,0,0-8ZM184,68h48a4,4,0,0,0,0-8H184a4,4,0,0,0,0,8Zm48,56H184a4,4,0,0,0,0,8h48a4,4,0,0,0,0-8Zm0,32H184a4,4,0,0,0,0,8h48a4,4,0,0,0,0-8Zm0,32H184a4,4,0,0,0,0,8h48a4,4,0,0,0,0-8Z" }, null, -1), D = [
  q
], F = {
  name: "PhEqualizer"
}, J = /* @__PURE__ */ g({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(i) {
    const H = i, r = s("weight", "regular"), d = s("size", "1em"), c = s("color", "currentColor"), l = s("mirrored", !1), h = m(() => H.weight ?? r), n = m(() => H.size ?? d), _ = m(() => H.color ?? c), p = m(() => H.mirrored !== void 0 ? H.mirrored ? "scale(-1, 1)" : void 0 : l ? "scale(-1, 1)" : void 0);
    return (Z, G) => (t(), o("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: a(n),
      height: a(n),
      fill: a(_),
      transform: a(p)
    }, Z.$attrs), [
      v(Z.$slots, "default"),
      a(h) === "bold" ? (t(), o("g", f, w)) : a(h) === "duotone" ? (t(), o("g", V, z)) : a(h) === "fill" ? (t(), o("g", S, B)) : a(h) === "light" ? (t(), o("g", E, b)) : a(h) === "regular" ? (t(), o("g", P, $)) : a(h) === "thin" ? (t(), o("g", j, D)) : M("", !0)
    ], 16, y));
  }
});
export {
  J as default
};
