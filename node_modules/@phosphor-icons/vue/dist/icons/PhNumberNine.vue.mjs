import { defineComponent as A, inject as r, computed as l, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as Z, createCommentVNode as f, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M188,96a60,60,0,1,0-60,60,59.21,59.21,0,0,0,7.81-.53l-26.27,46.64a12,12,0,0,0,20.92,11.78l49.54-88A59.57,59.57,0,0,0,188,96ZM92,96a36,36,0,1,1,36,36A36,36,0,0,1,92,96Z" }, null, -1), v = [
  k
], x = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M216,40V216a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V40A16,16,0,0,1,56,24H200A16,16,0,0,1,216,40Z",
  opacity: "0.2"
}, null, -1), V = /* @__PURE__ */ s("path", { d: "M128,40a56,56,0,1,0,15.62,109.77L113,204.07A8,8,0,1,0,127,211.92l49.55-88A56,56,0,0,0,128,40Zm0,96a40,40,0,1,1,40-40A40,40,0,0,1,128,136Z" }, null, -1), z = [
  S,
  V
], C = { key: 2 }, N = /* @__PURE__ */ s("path", { d: "M200,24H56A16,16,0,0,0,40,40V216a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM166.3,129.62,132.62,188a8,8,0,0,1-13.86-8l16.52-28.61A44.79,44.79,0,0,1,128,152a44.05,44.05,0,1,1,38.3-22.38ZM156,108a28,28,0,1,1-28-28A28,28,0,0,1,156,108Z" }, null, -1), B = [
  N
], H = { key: 3 }, L = /* @__PURE__ */ s("path", { d: "M128,42a54,54,0,1,0,19.94,104.17l-33.17,58.88a6,6,0,1,0,10.46,5.89l49.54-88A54,54,0,0,0,128,42Zm0,96a42,42,0,1,1,42-42A42,42,0,0,1,128,138Z" }, null, -1), b = [
  L
], E = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M128,40a56,56,0,1,0,15.62,109.77L113,204.07A8,8,0,1,0,127,211.92l49.55-88A56,56,0,0,0,128,40Zm0,96a40,40,0,1,1,40-40A40,40,0,0,1,128,136Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M128,44a52,52,0,1,0,24.74,97.73L116.51,206a4,4,0,0,0,7,3.92L173,122A52,52,0,0,0,128,44Zm0,96a44,44,0,1,1,44-44A44.05,44.05,0,0,1,128,140Z" }, null, -1), q = [
  j
], D = {
  name: "PhNumberNine"
}, I = /* @__PURE__ */ A({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const i = c, _ = r("weight", "regular"), h = r("size", "1em"), p = r("color", "currentColor"), m = r("mirrored", !1), n = l(() => i.weight ?? _), d = l(() => i.size ?? h), g = l(() => i.color ?? p), u = l(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : m ? "scale(-1, 1)" : void 0);
    return (a, F) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(u)
    }, a.$attrs), [
      Z(a.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", w, v)) : t(n) === "duotone" ? (o(), e("g", x, z)) : t(n) === "fill" ? (o(), e("g", C, B)) : t(n) === "light" ? (o(), e("g", H, b)) : t(n) === "regular" ? (o(), e("g", E, W)) : t(n) === "thin" ? (o(), e("g", $, q)) : f("", !0)
    ], 16, M));
  }
});
export {
  I as default
};
