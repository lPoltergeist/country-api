import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as Z, createCommentVNode as w, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], k = { key: 0 }, A = /* @__PURE__ */ s("path", { d: "M216.49,136.49l-80,80a12,12,0,1,1-17-17l80-80a12,12,0,1,1,17,17Zm-16-105a12,12,0,0,0-17,0l-152,152a12,12,0,0,0,17,17l152-152A12,12,0,0,0,200.49,31.51Z" }, null, -1), v = [
  A
], x = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M192,40V192H40Z",
  opacity: "0.2"
}, null, -1), z = /* @__PURE__ */ s("path", { d: "M195.06,32.61a8,8,0,0,0-8.72,1.73l-152,152A8,8,0,0,0,40,200H192a8,8,0,0,0,8-8V40A8,8,0,0,0,195.06,32.61ZM184,184H59.31L184,59.31Z" }, null, -1), C = [
  S,
  z
], V = { key: 2 }, B = /* @__PURE__ */ s("path", { d: "M200,40V192a8,8,0,0,1-8,8H40a8,8,0,0,1-5.66-13.66l152-152A8,8,0,0,1,200,40Z" }, null, -1), H = [
  B
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M212.24,132.24l-80,80a6,6,0,1,1-8.48-8.48l80-80a6,6,0,1,1,8.48,8.48Zm-16-96.48a6,6,0,0,0-8.48,0l-152,152a6,6,0,1,0,8.48,8.48l152-152A6,6,0,0,0,196.24,35.76Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M213.66,133.66l-80,80a8,8,0,0,1-11.32-11.32l80-80a8,8,0,0,1,11.32,11.32Zm-16-99.32a8,8,0,0,0-11.32,0l-152,152a8,8,0,0,0,11.32,11.32l152-152A8,8,0,0,0,197.66,34.34Z" }, null, -1), $ = [
  W
], j = { key: 5 }, L = /* @__PURE__ */ s("path", { d: "M210.83,130.83l-80,80a4,4,0,1,1-5.66-5.66l80-80a4,4,0,1,1,5.66,5.66Zm-16-93.66a4,4,0,0,0-5.66,0l-152,152a4,4,0,0,0,5.66,5.66l152-152A4,4,0,0,0,194.83,37.17Z" }, null, -1), q = [
  L
], D = {
  name: "PhNotches"
}, I = /* @__PURE__ */ y({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(a) {
    const n = a, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), m = i("mirrored", !1), l = r(() => n.weight ?? _), c = r(() => n.size ?? h), g = r(() => n.color ?? p), u = r(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : m ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(c),
      height: t(c),
      fill: t(g),
      transform: t(u)
    }, d.$attrs), [
      Z(d.$slots, "default"),
      t(l) === "bold" ? (o(), e("g", k, v)) : t(l) === "duotone" ? (o(), e("g", x, C)) : t(l) === "fill" ? (o(), e("g", V, H)) : t(l) === "light" ? (o(), e("g", N, E)) : t(l) === "regular" ? (o(), e("g", P, $)) : t(l) === "thin" ? (o(), e("g", j, q)) : w("", !0)
    ], 16, M));
  }
});
export {
  I as default
};
