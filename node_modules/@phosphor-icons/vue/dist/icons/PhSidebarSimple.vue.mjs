import { defineComponent as g, inject as r, computed as d, openBlock as o, createElementBlock as e, mergeProps as u, unref as t, renderSlot as Z, createCommentVNode as M, createElementVNode as s } from "vue";
const y = ["width", "height", "fill", "transform"], A = { key: 0 }, f = /* @__PURE__ */ s("path", { d: "M216,36H40A20,20,0,0,0,20,56V200a20,20,0,0,0,20,20H216a20,20,0,0,0,20-20V56A20,20,0,0,0,216,36ZM44,60H76V196H44ZM212,196H100V60H212Z" }, null, -1), w = [
  f
], k = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M88,48V208H40a8,8,0,0,1-8-8V56a8,8,0,0,1,8-8Z",
  opacity: "0.2"
}, null, -1), v = /* @__PURE__ */ s("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM40,56H80V200H40ZM216,200H96V56H216V200Z" }, null, -1), x = [
  S,
  v
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40Zm0,160H88V56H216V200Z" }, null, -1), B = [
  C
], b = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M216,42H40A14,14,0,0,0,26,56V200a14,14,0,0,0,14,14H216a14,14,0,0,0,14-14V56A14,14,0,0,0,216,42ZM38,200V56a2,2,0,0,1,2-2H82V202H40A2,2,0,0,1,38,200Zm180,0a2,2,0,0,1-2,2H94V54H216a2,2,0,0,1,2,2Z" }, null, -1), E = [
  N
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM40,56H80V200H40ZM216,200H96V56H216V200Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ s("path", { d: "M216,44H40A12,12,0,0,0,28,56V200a12,12,0,0,0,12,12H216a12,12,0,0,0,12-12V56A12,12,0,0,0,216,44ZM36,200V56a4,4,0,0,1,4-4H84V204H40A4,4,0,0,1,36,200Zm184,0a4,4,0,0,1-4,4H92V52H216a4,4,0,0,1,4,4Z" }, null, -1), D = [
  q
], F = {
  name: "PhSidebarSimple"
}, J = /* @__PURE__ */ g({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = r("weight", "regular"), h = r("size", "1em"), H = r("color", "currentColor"), V = r("mirrored", !1), n = d(() => i.weight ?? _), a = d(() => i.size ?? h), p = d(() => i.color ?? H), m = d(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : V ? "scale(-1, 1)" : void 0);
    return (c, G) => (o(), e("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(p),
      transform: t(m)
    }, c.$attrs), [
      Z(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", A, w)) : t(n) === "duotone" ? (o(), e("g", k, x)) : t(n) === "fill" ? (o(), e("g", z, B)) : t(n) === "light" ? (o(), e("g", b, E)) : t(n) === "regular" ? (o(), e("g", P, $)) : t(n) === "thin" ? (o(), e("g", j, D)) : M("", !0)
    ], 16, y));
  }
});
export {
  J as default
};
