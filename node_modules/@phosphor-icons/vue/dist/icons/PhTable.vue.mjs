import { defineComponent as V, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as p, unref as t, renderSlot as M, createCommentVNode as g, createElementVNode as s } from "vue";
const u = ["width", "height", "fill", "transform"], y = { key: 0 }, f = /* @__PURE__ */ s("path", { d: "M224,44H32A12,12,0,0,0,20,56V192a20,20,0,0,0,20,20H216a20,20,0,0,0,20-20V56A12,12,0,0,0,224,44ZM44,116H76v24H44Zm56,0H212v24H100ZM212,68V92H44V68ZM44,164H76v24H44Zm56,24V164H212v24Z" }, null, -1), A = [
  f
], w = { key: 1 }, k = /* @__PURE__ */ s("path", {
  d: "M88,104v96H32V104Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM40,112H80v32H40Zm56,0H216v32H96ZM216,64V96H40V64ZM40,160H80v32H40Zm176,32H96V160H216v32Z" }, null, -1), S = [
  k,
  x
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM40,112H80v32H40Zm56,0H216v32H96ZM40,160H80v32H40Zm176,32H96V160H216v32Z" }, null, -1), B = [
  C
], b = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M224,50H32a6,6,0,0,0-6,6V192a14,14,0,0,0,14,14H216a14,14,0,0,0,14-14V56A6,6,0,0,0,224,50ZM38,110H82v36H38Zm56,0H218v36H94ZM218,62V98H38V62ZM38,192V158H82v36H40A2,2,0,0,1,38,192Zm178,2H94V158H218v34A2,2,0,0,1,216,194Z" }, null, -1), E = [
  N
], P = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM40,112H80v32H40Zm56,0H216v32H96ZM216,64V96H40V64ZM40,160H80v32H40Zm176,32H96V160H216v32Z" }, null, -1), $ = [
  W
], j = { key: 5 }, T = /* @__PURE__ */ s("path", { d: "M224,52H32a4,4,0,0,0-4,4V192a12,12,0,0,0,12,12H216a12,12,0,0,0,12-12V56A4,4,0,0,0,224,52ZM36,108H84v40H36Zm56,0H220v40H92ZM220,60v40H36V60ZM36,192V156H84v40H40A4,4,0,0,1,36,192Zm180,4H92V156H220v36A4,4,0,0,1,216,196Z" }, null, -1), q = [
  T
], D = {
  name: "PhTable"
}, I = /* @__PURE__ */ V({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(a) {
    const H = a, l = i("weight", "regular"), _ = i("size", "1em"), h = i("color", "currentColor"), Z = i("mirrored", !1), n = r(() => H.weight ?? l), d = r(() => H.size ?? _), m = r(() => H.color ?? h), v = r(() => H.mirrored !== void 0 ? H.mirrored ? "scale(-1, 1)" : void 0 : Z ? "scale(-1, 1)" : void 0);
    return (c, F) => (o(), e("svg", p({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(m),
      transform: t(v)
    }, c.$attrs), [
      M(c.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", y, A)) : t(n) === "duotone" ? (o(), e("g", w, S)) : t(n) === "fill" ? (o(), e("g", z, B)) : t(n) === "light" ? (o(), e("g", b, E)) : t(n) === "regular" ? (o(), e("g", P, $)) : t(n) === "thin" ? (o(), e("g", j, q)) : g("", !0)
    ], 16, u));
  }
});
export {
  I as default
};
